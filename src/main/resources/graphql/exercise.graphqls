type Mutation {
    deleteMember(id: Int!): Boolean!
    deleteBook(id: Int!): Boolean!

    newMember(email: String!, name: String!): Member!
    newBook(title: String!, summary: String!): Book!

    updateMember(id: Int!, email: String!, name: String!): Member!
    updateBook(id: Int!, title: String!, summary: String!): Book!

    checkOutBook(id: Int!, memberId: Int!): Book!
    checkInBook(id: Int!): Book!

    revokeMember(id: Int!): Member!
    reinstateMember(id: Int!): Member!
}

type Query {
    allBooks(title: String, summary: String): [Book]
    allMembers(email: String, name: String): [Member]

    allAvailableBooks(title: String, summary: String): [Book]

    allCheckedOutBooks: [Book]
    allOverdueBooks: [Book]

    allOverdueMembers: [Member]

    searchBooks(search: String!): [Book]
    searchMembers(search: String!): [Member]

    book(id: Int!): Book
    member(id: Int!): Member
}

type Book {
    id: ID
    title: String
    summary: String
    member: Member
    checkedAt: String
    createdAt: String
    updatedAt: String
}

type Member {
    id: ID
    email: String
    name: String
    books: [Book]
    lockedAt: String
    createdAt: String
    updatedAt: String
}
